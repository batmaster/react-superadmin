name: Deploy Documentation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'packages/**'
      - '.github/workflows/deploy.yml'
  pull_request: # Added pull_request trigger
    branches: [main]
    paths:
      - 'docs/**'
      - 'packages/**'
      - '.github/workflows/deploy.yml'

env: # Added environment variables
  NODE_VERSION: '20.x'
  PNPM_VERSION: '8'

jobs:
  deploy-docs-production: # Renamed from deploy-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: # Updated environment definition
      name: production
      url: https://react-superadmin.web.app

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }} # Used env var
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build documentation
        run: |
          cd docs
          pnpm install
          pnpm build
      - name: Deploy to Firebase Production Channel # Updated step name
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: react-superadmin # Single project for all environments
          channelId: live # Deploy to live channel

  deploy-docs-preview: # Added new job for preview deployments
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment:
      name: preview
      url: https://react-superadmin.web.app # Same domain, different channel

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build documentation
        run: |
          cd docs
          pnpm install
          pnpm build
      - name: Deploy to Firebase Preview Channel # Updated step name
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: react-superadmin # Single project for all environments
          channelId: pr-${{ github.event.number }} # Dynamic channel ID for PR

  deploy-docs-staging: # Added new job for staging deployments
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.labels.*.name == 'staging'
    environment:
      name: staging
      url: https://react-superadmin.web.app # Same domain, different channel

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build documentation
        run: |
          cd docs
          pnpm install
          pnpm build
      - name: Deploy to Firebase Staging Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: react-superadmin # Single project for all environments
          channelId: staging # Staging channel
